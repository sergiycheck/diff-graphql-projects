enum CacheControlScope {
  PUBLIC
  PRIVATE
}

directive @cacheControl(
  maxAge: Int
  scope: CacheControlScope
  inheritMaxAge: Boolean
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION

# field level caching
# type Post {
#   id: String!
#   title: String!
#   user: User

#   votes: Int @cacheControl(maxAge: 30)
#   readByCurrentUser: Boolean! @cacheControl(maxAge: 10, scope: PRIVATE)
# }

# type level definitions
type Post @cacheControl(maxAge: 240) {
  id: Int!
  title: String
  user: User
  votes: Int
  readByCurrentUser: Boolean!
}

input CreatePost {
  title: String!
  userId: String!
}

input UpdatePost {
  id: String!
  userId: String!
  title: String
}

type User {
  id: String!
  email: String!
  password: String!
  posts: [Post!]!
}

type Token {
  token: String!
}

input CreateUser {
  email: String!
  password: String!
  # posts: [CreatePostForUser!]
}

input UpdateUser {
  id: String!
  email: String
  password: String
}

type Query {
  allUsers: [User!]
  user(id: String!): User
  getUserFromToken(token: String!): User!

  allPosts: [Post!]
  post(id: String!): Post
}

type Mutation {
  createUser(dto: CreateUser!): User!
  updateUser(dto: UpdateUser!): User!
  deleteUser(id: String!): User!
  signInUser(email: String!): Token!

  createPost(dto: CreatePost!): Post!
  updatePost(dto: UpdatePost!): Post!
  deletePost(id: String!): Post!
}
